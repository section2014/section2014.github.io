<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NodeJs 基础篇</title>
      <link href="/posts/26981.html"/>
      <url>/posts/26981.html</url>
      
        <content type="html"><![CDATA[<h1 id="NodeJs-基础篇"><a href="#NodeJs-基础篇" class="headerlink" title="NodeJs 基础篇"></a>NodeJs 基础篇</h1><h2 id="Node-和-npm-工具的安装与验证"><a href="#Node-和-npm-工具的安装与验证" class="headerlink" title="Node 和 npm 工具的安装与验证"></a>Node 和 npm 工具的安装与验证</h2><ol><li>验证 Node 安装。<code>node -v</code></li><li>安装 Node 默认安装 npm 工具，验证 npm 安装。<code>npm -v</code></li></ol><h2 id="npm-仓库的查看与配置"><a href="#npm-仓库的查看与配置" class="headerlink" title="npm 仓库的查看与配置"></a>npm 仓库的查看与配置</h2><p>查看 npm 镜像。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span class="token comment" spellcheck="true"># https://registry.npmjs.org/</span><span class="token comment" spellcheck="true"># 设置npm镜像</span><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/#安装" target="_blank" rel="noopener">https://panjiachen.github.io/vue-element-admin-site/zh/guide/#安装</a></p><p><strong>TIP(vue-element-admin)</strong></p><p>强烈建议不要用直接使用 cnpm 安装，会有各种诡异的 bug，可以通过重新指定 registry 来解决 npm 安装速度慢的问题。若还是不行，可使用 <a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener">yarn</a> 替代 <code>npm</code>。</p></blockquote><h2 id="npm-推荐换源-或-cnpm-的依赖管理"><a href="#npm-推荐换源-或-cnpm-的依赖管理" class="headerlink" title="npm(推荐换源) 或 cnpm 的依赖管理"></a>npm(推荐换源) 或 cnpm 的依赖管理</h2><ol><li><p>使用 npm 工具安装依赖。使用 npm 工具安装依赖 <code>npm install xxx</code>。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 各种安装的区别</span><span class="token comment" spellcheck="true"># 全局依赖安装</span><span class="token comment" spellcheck="true"># 1. 将安装包放在 /usr/local 下或者你 node 的安装目录。</span><span class="token comment" spellcheck="true"># 2. 可以直接在命令行里使用。</span><span class="token function">npm</span> <span class="token function">install</span> xxx -g<span class="token comment" spellcheck="true"># 会把依赖安装到 node_modules 中；</span><span class="token comment" spellcheck="true"># 不会修改 package.json，之后运行 npm install 命令时不会自动安装。</span><span class="token function">npm</span> <span class="token function">install</span> xxx<span class="token comment" spellcheck="true"># 会把依赖安装到 node_modules 中；</span><span class="token comment" spellcheck="true"># 会添加依赖到 package.json 的 dependencies 属性下，之后运行 npm install 命令时安装依赖到 node_modules</span><span class="token comment" spellcheck="true"># 之后运行 npm install –production 或者注明 NODE_ENV 变量值为 production 时，会安装到 node_modules</span><span class="token function">npm</span> <span class="token function">install</span> xxx --save<span class="token function">npm</span> <span class="token function">install</span> xxx -S<span class="token comment" spellcheck="true"># 会把依赖安装到 node_modules 中；</span><span class="token comment" spellcheck="true"># 会添加依赖到 package.json 的 devDependencies 属性下，之后运行 npm install 命令时安装依赖到 node_modules</span><span class="token comment" spellcheck="true"># 之后运行 npm install –production 或者注明 NODE_ENV 变量值为 production 时，不会安装到 node_modules</span><span class="token function">npm</span> <span class="token function">install</span> xxx --save-dev<span class="token function">npm</span> <span class="token function">install</span> xxx -D<span class="token comment" spellcheck="true">## 使用原则：运行时需要用到的依赖使用 –-save，否则开发时用到的依赖使用 -–save-dev</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>国外镜像速度较慢，安装 cnpm 工具。使用 cnpm 工具安装依赖 <code>cnpm install xxx</code>。 </p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 验证</span>cnpm -v<span class="token comment" spellcheck="true"># cnpm@6.1.1 (C:\Users\guo.wl\AppData\Roaming\npm\node_modules\cnpm\lib\parse_argv.js)</span><span class="token comment" spellcheck="true"># npm@6.14.5 (C:\Users\guo.wl\AppData\Roaming\npm\node_modules\cnpm\node_modules\npm\lib\npm.js)</span><span class="token comment" spellcheck="true"># node@12.16.3 (D:\Program Files\nodejs\node.exe)</span><span class="token comment" spellcheck="true"># npminstall@3.27.0 (C:\Users\guo.wl\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\lib\index.js)</span><span class="token comment" spellcheck="true"># prefix=C:\Users\guo.wl\AppData\Roaming\npm</span><span class="token comment" spellcheck="true"># win32 x64 10.0.18363</span><span class="token comment" spellcheck="true"># registry=https://r.npm.taobao.org</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 npm/cnpm 工具卸载依赖。<code>npm uninstall xxx</code>/<code>cnpm uninstall xxx</code>。</p></li></ol><h2 id="node-modules-的删除"><a href="#node-modules-的删除" class="headerlink" title="node_modules 的删除"></a>node_modules 的删除</h2><p>删除 node_modules 文件夹</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> rimraf -grimraf node_modules<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># npm install -g @vue/cli</span><span class="token function">npm</span> i -g @vue/cli<span class="token function">npm</span> <span class="token function">install</span> axios --save<span class="token function">npm</span> <span class="token function">install</span> webpack -g<span class="token function">npm</span> <span class="token function">install</span> webpack-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJS </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 开发中的各种 O</title>
      <link href="/posts/54109.html"/>
      <url>/posts/54109.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java-开发中的各种-O-（待完善）"><a href="#Java-开发中的各种-O-（待完善）" class="headerlink" title="Java 开发中的各种 O （待完善）"></a>Java 开发中的各种 O （待完善）</h1><ul><li><strong>DO（ Data Object）：</strong> 此对象与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</li><li><strong>DTO（ Data Transfer Object）：</strong> 数据传输对象， Service 或 Manager 向外传输的对象。</li><li><strong>BO（ Business Object）：</strong> 业务对象， 由 Service 层输出的封装业务逻辑的对象。</li><li><strong>AO（ Application Object）：</strong> 应用对象， 在 Web 层与 Service 层之间抽象的复用对象模型，极为贴近展示层，复用度不高。</li><li><strong>VO（ View Object）：</strong> 显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</li><li><strong>Query：</strong> 数据查询对象，各层接收上层的查询请求。 注意超过 2 个参数的查询封装，禁止使用 Map 类来传输。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 领域模型 </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 整合 MyBatis-Plus 和 PageHelper</title>
      <link href="/posts/24223.html"/>
      <url>/posts/24223.html</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-集成-MyBatis-Plus-和-PageHelper"><a href="#Spring-Boot-集成-MyBatis-Plus-和-PageHelper" class="headerlink" title="Spring Boot 集成 MyBatis-Plus 和 PageHelper"></a>Spring Boot 集成 MyBatis-Plus 和 PageHelper</h1><h2 id="什么是-MyBatis-Plus？"><a href="#什么是-MyBatis-Plus？" class="headerlink" title="什么是 MyBatis-Plus？"></a>什么是 MyBatis-Plus？</h2><p><a href="https://mp.baomidou.com" target="_blank" rel="noopener">MyBatis-Plus</a></p><p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>在 <code>pom.xml</code> 文件中引入 <code>mybatis-plus-boot-starter</code> 依赖，该依赖会自动引入 MyBaits 相关依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- orm --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mybatis-plus-boot-starter.version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mybatis-plus-boot-starter.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- orm --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${mybatis-plus-boot-starter.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">## MyBatis-Plus</span><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath*<span class="token punctuation">:</span>/mapper/**/*.xml  <span class="token key atrule">global-config</span><span class="token punctuation">:</span>    <span class="token key atrule">banner</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><p>创建 MyBatis-Plus 配置文件，设置 MyBatis-Plus 要扫描 mapper 的包路径 com.inspur.boot.volume.*.mapper</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>PaginationInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>JsqlParserCountOptimize<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>MapperScan<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>EnableTransactionManagement<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Mybatis Plus 配置类 * * @author Guo.wl */</span><span class="token annotation punctuation">@Configuration</span> <span class="token comment" spellcheck="true">// 配置类</span><span class="token annotation punctuation">@EnableTransactionManagement</span> <span class="token comment" spellcheck="true">// 开启事务</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.inspur.boot.volume.*.mapper"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 扫描 mapper 的包路径</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 分页     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PaginationInterceptor <span class="token function">paginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        PaginationInterceptor paginationInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PaginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span>        paginationInterceptor<span class="token punctuation">.</span><span class="token function">setOverflow</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span>        paginationInterceptor<span class="token punctuation">.</span><span class="token function">setLimit</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 开启 count 的 join 优化,只针对部分 left join</span>        paginationInterceptor<span class="token punctuation">.</span><span class="token function">setCountSqlParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JsqlParserCountOptimize</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> paginationInterceptor<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="什么是-PageHelper"><a href="#什么是-PageHelper" class="headerlink" title="什么是 PageHelper"></a>什么是 PageHelper</h2><p><a href="https://github.com/pagehelper/Mybatis-PageHelper" target="_blank" rel="noopener">PageHelper</a></p><p>PageHelper 是 Mybatis 的分页插件，支持多数据库、多数据源。可以简化数据库的分页查询操作，整合过程也极其简单，只需引入依赖即可。</p><h3 id="POM-1"><a href="#POM-1" class="headerlink" title="POM"></a>POM</h3><p>在 <code>pom.xml</code> 文件中引入 <code>pagehelper-spring-boot-starter</code> 依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pagehelper-spring-boot-starter.version</span><span class="token punctuation">></span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pagehelper-spring-boot-starter.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${pagehelper-spring-boot-starter.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml-1"><a href="#application-yml-1" class="headerlink" title="application.yml"></a>application.yml</h3><pre class="line-numbers language-yml"><code class="language-yml"># Mybatis分页插件pageHelperpagehelper:  helper-dialect: mysql  reasonable: true  support-methods-arguments: false  params: count=countSql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// use static method startPage</span>PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectIf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PageInfo pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// pageInfo.getTotal() == 查询记录总数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea 和 eclipse 快捷键对照</title>
      <link href="/posts/9298.html"/>
      <url>/posts/9298.html</url>
      
        <content type="html"><![CDATA[<h2 id="Idea-和-eclipse-快捷键对照"><a href="#Idea-和-eclipse-快捷键对照" class="headerlink" title="Idea 和 eclipse 快捷键对照"></a>Idea 和 eclipse 快捷键对照</h2><table><thead><tr><th><strong>描述</strong></th><th><strong>Eclipse</strong></th><th><strong>Intellij</strong></th></tr></thead><tbody><tr><td><strong>常用</strong></td><td></td><td></td></tr><tr><td>打开类或接口</td><td>Ctrl+Shift +T</td><td>Ctrl+N</td></tr><tr><td>打开文件/资源</td><td>Ctrl+Shift+R</td><td>Ctrl+Shift+N</td></tr><tr><td>搜索文本</td><td>Ctrl+F</td><td>Ctrl + F<br>Ctrl + R 查找替换</td></tr><tr><td>从接口方法到实现方法</td><td>左键</td><td>Ctrl+Alt+左键</td></tr><tr><td>代码格式化</td><td>Ctrl+Shift+F</td><td>Ctrl+Alt+L</td></tr><tr><td>清除无用import</td><td>Ctrl+Shift+O</td><td>Ctrl+Alt+O</td></tr><tr><td>撤回修改</td><td>Ctrl+Z</td><td>Ctrl+Z</td></tr><tr><td>恢复撤回修改</td><td>Ctrl+Y</td><td>Ctrl+Shift+Z</td></tr><tr><td>代码上移</td><td>Alt +方向键上</td><td>Shift+Alt +方向键上</td></tr><tr><td>代码下移</td><td>Alt +方向键下</td><td>Shift+Alt +方向键下</td></tr><tr><td>删除当前行</td><td>Ctrl+D</td><td>Ctrl+Y</td></tr><tr><td>复制当前行</td><td>Ctrl+Alt+方向键上/下</td><td>Ctrl+D</td></tr><tr><td>重构/抽取变量</td><td></td><td>Ctrl+Alt+V</td></tr><tr><td></td><td></td><td></td></tr><tr><td><strong>调试</strong></td><td></td><td></td></tr><tr><td>运行一行</td><td>F6</td><td>F8</td></tr><tr><td>步入</td><td>F5</td><td>F7<br>Alt+Shift+F7 强制步入</td></tr><tr><td>步出</td><td>待补充</td><td>Shift+F8</td></tr><tr><td>运行到下一个断点</td><td>F8</td><td>F9</td></tr><tr><td>回复运行</td><td></td><td></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 工具 </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网优相关</title>
      <link href="/posts/30400.html"/>
      <url>/posts/30400.html</url>
      
        <content type="html"><![CDATA[<h1 id="网优相关"><a href="#网优相关" class="headerlink" title="网优相关"></a>网优相关</h1><h2 id="小区、RRU、BBU、CLB-关系"><a href="#小区、RRU、BBU、CLB-关系" class="headerlink" title="小区、RRU、BBU、CLB 关系"></a>小区、RRU、BBU、CLB 关系</h2><p>RRU、BBU、CLB属于硬件，关系如下：</p><table><thead><tr><th>关系</th><th>RRU</th><th>BBU</th><th>CLB</th></tr></thead><tbody><tr><td>RRU和BBU</td><td>N</td><td>1</td><td></td></tr><tr><td>BBU和CLB</td><td></td><td>N</td><td>1</td></tr></tbody></table><p><strong>注：厂家所说的基带板的概念，指此处的BBU（基带板）和CLB（主控板）</strong></p><p>小区属于逻辑单元，与RRU硬件的关系是<code>N&lt;-&gt;N</code>的，具体如下：</p><table><thead><tr><th>小区</th><th>RRU</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>一般情况下是这样的</td></tr><tr><td>N</td><td>1</td><td>室分小区，小区分类的情况</td></tr><tr><td>1</td><td>N</td><td>超级小区</td></tr></tbody></table><p><strong>3D-MIMO 小区 一定是 D频段小区</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 业务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网优 </tag>
            
            <tag> 整理 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
